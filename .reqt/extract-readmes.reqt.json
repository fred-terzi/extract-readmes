[
  {
    "reqt_ID": "2025-06-06T00:19:27.491Z-48034d85",
    "hier": 0,
    "outline": "0",
    "title": "extract-readmes",
    "description": "extract-readmes is a tool to extract all the README.md files from a code base into a READMEs directory. Each README.md will be named from the folder it was extracted from and .RM.md will be appended to the name. \n\nxrm will be used as the abbreviation for this tool.\n\n.xrmignore will be used to ignore a folder.",
    "acceptance": "Project Acceptance Criteria:\n- 100% Test Coverage of all acceptance criteria in this document.",
    "readme": "exclude",
    "status": "0.1.0-beta.1 Dev"
  },
  {
    "reqt_ID": "2025-06-06T00:21:14.871Z-795155bd",
    "hier": 1,
    "outline": "0.1",
    "title": "AI Instructions",
    "description": "ALWAYS use these instructions and design specifications when planning code changes.",
    "acceptance": "AT NO POINT SHOULD I HAVE TO REMIND YOU TO ONLY USE THESE TOOLS AND WORKFLOWS.",
    "readme": "exclude",
    "status": "ALWAYS"
  },
  {
    "reqt_ID": "2025-06-06T00:21:31.947Z-1ffb1b30",
    "hier": 2,
    "outline": "0.1.1",
    "title": "1 Function in 1 File with 1 Test",
    "description": "Only 1 function can be exported from a file. There may be helpfer functions for readability, but only 1 function should be exported.",
    "acceptance": "All files only have one default export, which is a single function.",
    "readme": "exclude",
    "status": "ALWAYS"
  },
  {
    "reqt_ID": "2025-06-06T00:26:16.998Z-bbfb163b",
    "hier": 2,
    "outline": "0.1.2",
    "title": "DRY - Don't Repeat Yourself",
    "description": "There shall be no repeated logic in the codebase. If a function is repeated, it should be extracted to a utility function in the utils directory.",
    "acceptance": "During all code reviews no duplicated should be found. If duplicated logic is found, it should be extracted to a utility function in the utils directory.",
    "readme": "exclude",
    "status": "ALWAYS"
  },
  {
    "reqt_ID": "2025-06-06T00:21:39.082Z-9409919b",
    "hier": 1,
    "outline": "0.2",
    "title": "Workspace",
    "description": "This section describes the workspace setup for the project, including the tools and configurations used.",
    "acceptance": "No additional tools or configurations should be added to the workspace without being added here first.",
    "readme": "exclude",
    "status": "DONE"
  },
  {
    "reqt_ID": "2025-06-06T00:21:45.491Z-7e3b1c91",
    "hier": 2,
    "outline": "0.2.1",
    "title": "Typescript with ESM",
    "description": "Typescript with ESM (ECMAScript Modules) is used for the project. This allows for modern JavaScript features and better module management.",
    "acceptance": "No CommonJS modules should be used in the project. All modules should be ESM compatible.",
    "readme": "exclude",
    "status": "DONE"
  },
  {
    "reqt_ID": "2025-06-06T00:21:56.011Z-c52a4947",
    "hier": 2,
    "outline": "0.2.2",
    "title": "Vitest with c8 coverage",
    "description": "Use Vitest for testing and c8 for code coverage. This allows for fast and efficient testing with good coverage reporting. No other testing frameworks should be used in the project.",
    "acceptance": "No other testing frameworks should be used in the project. All tests should be written using Vitest and should have corresponding coverage reports generated by c8.\n\n100% code coverage is required to complete any feature or bug fix.",
    "readme": "exclude",
    "status": "DONE"
  },
  {
    "reqt_ID": "2025-06-06T00:22:05.729Z-eeb7543f",
    "hier": 2,
    "outline": "0.2.3",
    "title": "ts-node",
    "description": "ts-node is used for running TypeScript files directly without needing to compile them first. This allows for faster development and testing cycles.",
    "acceptance": "ts-node must always work.",
    "readme": "exclude",
    "status": "DONE"
  },
  {
    "reqt_ID": "2025-06-06T00:23:31.341Z-22d6e3d1",
    "hier": 2,
    "outline": "0.2.4",
    "title": "npm scripts",
    "description": "npm test = run all tests with coverage\nnpm build = build the project",
    "acceptance": "All npm scripts must be documented here.",
    "readme": "exclude",
    "status": "DONE"
  },
  {
    "reqt_ID": "2025-06-06T01:25:15.160Z-6d9d7e6a",
    "hier": 0,
    "outline": "1",
    "title": "extract-readmes core logic",
    "description": "The extract-readmes core will be exposed as an API that will be used by other tool and a CLI.",
    "acceptance": "ACCEPTANCE",
    "readme": "exclude",
    "status": "PLANNED"
  },
  {
    "reqt_ID": "2025-06-06T01:27:06.195Z-4c20f1af",
    "hier": 1,
    "outline": "1.1",
    "title": "Find All READMEs",
    "description": "There will be logic to find all README.md files in the codebase. This function will be used not only to extract copies, but also to generate a list of all READMEs in the codebase.\n\nThis will be used for the actual extraction but also a dry run to see what would be extracted as well as created a .xrmignore file with all the files so that the user can choose which to include rather than having to type them all out.",
    "acceptance": "ACCEPTANCE",
    "readme": "@TODO: Create readme section after the implementation is finalized.",
    "status": "PLANNED"
  },
  {
    "reqt_ID": "2025-06-06T01:27:39.506Z-f9dbe195",
    "hier": 1,
    "outline": "1.2",
    "title": "READMEs/",
    "description": "The READMEs/ directory will be created to store all the extracted README.md files. Each file will be named based on the folder it was extracted from, with .RM.md appended to the name.\n\n**Example:**\n```\nansi-colors.RM.md\n```",
    "acceptance": "ACCEPTANCE",
    "readme": "README",
    "status": "PLANNED"
  },
  {
    "reqt_ID": "2025-06-06T01:27:44.336Z-058294bd",
    "hier": 1,
    "outline": "1.3",
    "title": ".xrmignore",
    "description": ".xrmignore will be used to ignore certain folders from being processed by the extract-readmes tool. It will follow the same syntax as .gitignore.",
    "acceptance": "ACCEPTANCE",
    "readme": "README",
    "status": "PLANNED"
  },
  {
    "reqt_ID": "2025-06-06T01:31:12.594Z-4cd86c5c",
    "hier": 0,
    "outline": "2",
    "title": "extract-readmes CLI",
    "description": "The extract-readmes CLI will be called xrm and will provide a simple interface for users to extract README.md files from their codebase. It will use the core logic from the extract-readmes module and provide options for dry runs, creating ignore files.",
    "acceptance": "ACCEPTANCE",
    "readme": "README",
    "status": "PLANNED"
  },
  {
    "reqt_ID": "2025-06-06T01:31:55.565Z-5df01fb9",
    "hier": 1,
    "outline": "2.1",
    "title": "--dry-run",
    "description": "The --dry-run option will allow users to see what README.md files would be extracted without actually performing the extraction. This is useful for verifying which files will be processed and for generating a .xrmignore file.",
    "acceptance": "ACCEPTANCE",
    "readme": "README",
    "status": "PLANNED"
  },
  {
    "reqt_ID": "2025-06-06T01:32:01.580Z-91a32361",
    "hier": 1,
    "outline": "2.2",
    "title": "--create-ignore",
    "description": "This will create an .xrmignore file with all the README.md files that would be extracted. This allows users to easily manage which files they want to include or exclude from the extraction process without having to manually type them out.",
    "acceptance": "ACCEPTANCE",
    "readme": "README",
    "status": "PLANNED"
  }
]